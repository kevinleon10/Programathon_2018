package codeSpitters.programathon_2018.model;
// Generated Sep 22, 2018 8:14:08 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DailyPhysicalStatus generated by hbm2java
 */
@Entity
@Table(name="DAILY_PHYSICAL_STATUS"
    ,catalog="CODE_SPITTERS"
)
public class DailyPhysicalStatus  implements java.io.Serializable {


     private Integer id;
     private Children children;
     private Date date;
     private String status;

    public DailyPhysicalStatus() {
    }

	
    public DailyPhysicalStatus(Children children) {
        this.children = children;
    }
    public DailyPhysicalStatus(Children children, Date date, String status) {
       this.children = children;
       this.date = date;
       this.status = status;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CHILDREN_SSN", nullable=false)
    public Children getChildren() {
        return this.children;
    }
    
    public void setChildren(Children children) {
        this.children = children;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DATE", length=19)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }

    
    @Column(name="STATUS", length=100)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }




}


